import{a as r,b as i,c,d as a}from"./chunk-2X2WE554.js";import{R as s,m as o}from"./chunk-22QBDJS3.js";var u=class t{hubConnection;onlineUsersSubject=new o([]);onlineUsers$=this.onlineUsersSubject.asObservable();constructor(){}async startConnection(n){this.hubConnection?.state===i.Connected&&(await this.hubConnection.stop(),await this.hubConnection.start()),this.hubConnection=new a().withUrl("https://xoname.runasp.net/presenceHub",{accessTokenFactory:()=>n,skipNegotiation:!0,transport:c.WebSockets}).withAutomaticReconnect([0,2e3,5e3,1e4]).configureLogging(r.Debug).build(),this.registerSignalREvents(),await this.hubConnection.start(),this.getOnlineUsers()}registerSignalREvents(){this.hubConnection&&(this.hubConnection.on("OnlineUsersList",n=>{this.onlineUsersSubject.next(n)}),this.hubConnection.on("UserOnline",n=>{let e=this.onlineUsersSubject.value;e.includes(n)||this.onlineUsersSubject.next([...e,n])}),this.hubConnection.on("UserOffline",n=>{let e=this.onlineUsersSubject.value;this.onlineUsersSubject.next(e.filter(l=>l!==n))}),this.hubConnection.onreconnecting(n=>console.warn("\u26A0\uFE0F SignalR reconnecting...",n)),this.hubConnection.onreconnected(()=>this.getOnlineUsers()),this.hubConnection.onclose(n=>console.error("\u274C SignalR connection closed:",n)))}getOnlineUsers(){this.hubConnection?.state===i.Connected&&this.hubConnection.invoke("GetOnlineUsers").then(()=>console.log("\u2705 GetOnlineUsers invoked successfully")).catch(n=>console.error("\u274C Error invoking GetOnlineUsers:",n))}async stopConnection(){this.hubConnection&&(await this.hubConnection.stop(),this.hubConnection=void 0)}static \u0275fac=function(e){return new(e||t)};static \u0275prov=s({token:t,factory:t.\u0275fac,providedIn:"root"})};export{u as a};
